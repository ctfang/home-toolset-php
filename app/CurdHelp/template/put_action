package {controller}

import (
    "errors"
	"github.com/gin-gonic/gin"
	"{gomodule}/app/common"
	"{gomodule}/app/providers"
	"{gomodule}/generate/proto/{app}/{model}"
)

// Put  更新数据 - {controller_doc}
func (receiver *Controller) Put(req *{model}.{controller_name}PutRequest, ctx *auth.Context) (*{model}.{controller_name}PutResponse, error) {
    id := int32(common.GetParamId(ctx))
	has := receiver.orm.WhereId(id).First()
	if has == nil {
		return nil, errors.New("数据不存在")
	}
	receiver.orm.WhereId(id).Updates(map[string]interface{}{
{update_str}
	})
	return &{model}.{controller_name}PutResponse{}, nil
}

// GinHandlePut gin原始路由处理
func (receiver *Controller) GinHandlePut(ctx *gin.Context) {
	req := &{model}.{controller_name}PutRequest{}
	err := ctx.ShouldBind(req)

	if err != nil {
		providers.ErrorRequest(ctx, err)
		return
	}

	resp, err := receiver.Put(req, auth.NewContext(ctx))
	if err != nil {
		providers.ErrorResponse(ctx, err)
		return
	}

	providers.SuccessResponse(ctx, resp)
}